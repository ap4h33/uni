#include <iostream>
#include <cmath> //для sqrt() в 1 задаче
using namespace std;
//Вариант 6

int Data_check(int crit1, int crit2, string com) {
    // crit 1 -- минимальное возможное число
    // crit 2 -- максимальное возможное число
    // com -- команда пользователю
    int n = 0;
    cout << com;
    if (!(cin >> n) || n < crit1 || n > crit2) {
        cin.clear();  //Очищает вписаное пользователем значение.
        cin.ignore(numeric_limits<streamsize>::max(), '\n'); //Игнорирует ввод
        //numeric_limits<streamsize>::max() -- считает длинну ввода полностью
        //"\n" -- считывает все до нажатия enter (ввода, т.е. только одну строчку)
        //Нужно для того, чтобы стринг/чар не забивал прогу
        cout << "Пожалуйста, введите допустимое значение.\n";
        return Data_check(crit1, crit2, com);
    }
    return n;
}

void Quadratic_equations(){
    /*Задача 1. Даны вещественные числа a, b, c (a не равно 0). Решить урав-
нение ax2 + bx + c = 0 . В числе возможных вариантов учесть вариант
равенства корней уравнения.*/
    int a, b, c;
    a = Data_check(-1000, 1000, "Введите значение а: ");
    while (a == 0) {
        cout << "Значение а не должно быть равно нулю. Введите значение а еще раз: "; 
        a = Data_check(-1000, 1000, "Введите значение а: ");
    }
    b = Data_check(-1000, 1000, "Введите значение b: ");
    c = Data_check(-1000, 1000, "Введите значение c: ");
    int disc = b*b - 4*a*c; //Считает дискриминант уравнения
    if (disc < 0) { 
        cout << "У уравнения нет корней";
    }
    disc = sqrt(disc);
    if (disc == 0)
        cout << "У уравнения вссего один корень: " << -b/2*a;
    else if (disc > 0) {
        if ((-b-(disc))/2*a == (-b+(disc))/2*a)
            cout << "У уравнения два одинаковых корня: " << (-b-(disc))/2*a;
        else
            cout << "Первый корень уравнения: " << (-b+(disc))/2*a <<"\nВторой корень уравнения: " << (-b-sqrt(disc))/2*a;
    }
}

void Min_max_mid_num(){
    /*Даны три различных целых числа. Определить, какое из них
(первое, второе или третье):
а) самое большое;
б) самое маленькое;
в) является средним (средним назовем число, которое больше наимень-
шего из данных чисел, но меньше наибольшего).*/
    int a, b, c;
    a = b = c = 0;
    cout << "Введите число а: ";
    cin >> a;
    cout << "Введите число b: ";
    cin >> b;
    cout << "Введите число c: ";
    cin >> c;
    int min, max, mid;
    min = max = mid = 0;
    if (a >= b) {
        if (c >= a) {
            min = b;
            max = c;
            mid = a;
        }
        else if (b > c) {
            min = c;
            max = a;
            mid = b;
        }
        else if (c >= b) {
            min = b;
            max = a;
            mid = c;
        }
        
    }
    else if (b > a) {
        if (a > c) {
            max = b;
            min = c;
            mid = a;
        }
        else if (c >= b) {
            max = c;
            min = a;
            mid = b;
        }
        else if (c >= a) {
            max = b;
            min = a;
            mid = c;
        }
    }
    cout << "Самое большое число: " << max
         << "\n Среднее число: " << mid
         << "\n Самое маленькое число: " << min;
}

void Day_of_the_week(){
    /*Дано целое число k (1 <= k <= 365). Определить, каким днем
недели (понедельником, вторником, …, субботой или воскресеньем) яв-
ляется k-й день не високосного года, в котором 1 января:
а) понедельник;
б) d-й день недели (если 1 января — понедельник, то d = 1 , если втор-
ник — d = 2 , …, если воскресенье — d = 7).*/
    int k, d;
    k = d = 0;
    k = Data_check(1, 365, "Введите значение k: ");
    d = Data_check(1, 7, "Введите значение d (1-7): ");
    int d_true = (k % 7 + d - 1) % 7;
    switch (d_true) {
        case 1:
            cout << "Понедельник";
            break;
        case 2:
            cout << "Вторник";
            break;
        case 3:
            cout << "Среда";
            break;
        case 4:
            cout << "Четверг";
            break;
        case 5:
            cout << "Пятница";
            break;
        case 6:
            cout << "Суббота";
            break;
        case 0:
            cout << "Воскресенье";
            break;
    }
}

void Flat_Numbers(){
    /*Задача 4. В подъезде жилого дома имеется n квартир, пронумерованных
подряд, начиная с номера a. Определить, является ли сумма номеров
всех квартир четным числом. Формулу суммы членов арифметической
прогрессии не использовать*/
    int n = Data_check(1, 1000, "Введите количество квартир: "), a = Data_check(1, 1000, "Введите номер первой квартиры: ");
    if (a % 2 == 0) {
        if (((n - 1) % 4 == 0)  || (n % 4 == 0))
            cout << "Сумма номеров квартир четная";
        else
            cout << "Сумма номеров квартир нечетная"; 
    }
    else {
        if ((n % 4 == 0) || ((n + 1) % 4 == 0))
            cout << "Сумма номеров квартир четная";
        else
            cout << "Сумма номеров квартир нечетная";
    }
}

main() {
    setlocale(LC_ALL, "rus");
    int num_of_task_MO = 0;
    cout << "1: Квадратные уравнения" <<
        "\n2: Максимум и минимум" <<
        "\n3: Дни недели" <<
        "\n4: Номера квартир\n";
    num_of_task_MO = Data_check(1, 4, "Введите номер задачи, которую вы хотите реализовать (1-4): ");
    switch (num_of_task_MO){
        case 1:
            Quadratic_equations();
            break;
        case 2 :
            Min_max_mid_num();
            break;
        case 3:
            Day_of_the_week();
            break;
        case 4:
            Flat_Numbers();
            break;
        }
    return 0;
}

